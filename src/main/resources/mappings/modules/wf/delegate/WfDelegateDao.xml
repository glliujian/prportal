<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.wf.dao.delegate.WfDelegateDao">
    
	<sql id="wfDelegateColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.owner AS "owner.id",
		a.delegate AS "delegate.id",
		a.flow_type AS "flowType",
		a.start_time AS "startTime",
		a.end_time AS "endTime",
		a.proc_def_key AS "procDefKey",
		a.proc_ins_id AS "procInsId",
		a.application_no AS "applicationNo",
		a.task_id AS "taskId",
		a.task_name AS "taskName",
		owner.name AS "owner.name",
		owner.login_name AS "owner.loginName",
		delegate.name AS "delegate.name"
	</sql>
	
	<sql id="wfDelegateJoins">
		LEFT JOIN sys_user owner ON owner.id = a.owner
		LEFT JOIN sys_user delegate ON delegate.id = a.delegate
	</sql>
	
    
	<select id="get" resultType="WfDelegate" >
		SELECT 
			<include refid="wfDelegateColumns"/>
		FROM wf_delegate a
		<include refid="wfDelegateJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="WfDelegate" >
		SELECT 
			<include refid="wfDelegateColumns"/>
		FROM wf_delegate a
		<include refid="wfDelegateJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="owner != null and owner.id != null and owner.id != ''">
				AND a.owner = #{owner.id}
			</if>
			<if test="delegate != null and delegate.id != null and delegate.id != ''">
				AND a.delegate = #{delegate.id}
			</if>
		</where>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findNowList" resultType="WfDelegate" >
		SELECT 
			<include refid="wfDelegateColumns"/>
		FROM wf_delegate a
		<include refid="wfDelegateJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND now() &gt; a.start_time AND now() &lt; end_time
			<if test="owner != null and owner.id != null and owner.id != ''">
				AND a.owner = #{owner.id}
			</if>
			<if test="delegate != null and delegate.id != null and delegate.id != ''">
				AND a.delegate = #{delegate.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findOverlapList" resultType="WfDelegate" >
		SELECT 
			<include refid="wfDelegateColumns"/>
		FROM wf_delegate a
		<include refid="wfDelegateJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			
			AND  a.end_time &gt; #{startTime} AND a.start_time &lt; #{endTime}  
			 
			<if test="id != null and id != ''">
				AND a.id != #{id}
			</if>
			<if test="owner != null and owner.id != null and owner.id != ''">
				AND a.owner = #{owner.id}
			</if>
			<!-- <if test="delegate != null and delegate.id != null and delegate.id != ''">
				AND a.delegate = #{delegate.id}
			</if> -->
			<if test="procInsId != null and procInsId != ''">
				AND a.proc_ins_id = #{procInsId}
			</if>
			<if test="taskId  != null and taskId != ''">
				AND a.task_id = #{taskId}
			</if>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="WfDelegate" >
		SELECT 
			<include refid="wfDelegateColumns"/>
		FROM wf_delegate a
		<include refid="wfDelegateJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO wf_delegate(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			owner,
			delegate,
			flow_type,
			task_id,
			task_name,
			proc_ins_id,
			application_no,
			start_time,
			end_time
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{owner.id},
			#{delegate.id},
			#{flowType},
			#{taskId},
			#{taskName},
			#{procInsId},
			#{applicationNo},
			#{startTime},
			#{endTime}
		)
	</insert>
	
	<update id="update">
		UPDATE wf_delegate SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			owner = #{owner.id},
			delegate = #{delegate.id},
			flow_type = #{flowType},
			start_time = #{startTime},
			end_time = #{endTime}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM wf_delegate
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE wf_delegate SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="WfDelegate" statementType="STATEMENT">
		select * FROM wf_delegate  where ${propertyName} = '${value}'
	</select>
	
</mapper>